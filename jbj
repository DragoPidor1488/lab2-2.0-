using System;

namespace GeometricShapes
{
    interface IShape
    {
        double CalculateArea();
        double CalculatePerimeter();
        void DisplayInfo();
    }

    abstract class Shape : IShape
    {
        public abstract double CalculateArea();
        public abstract double CalculatePerimeter();
        public abstract void DisplayInfo();
    }

    class Circle : Shape
    {
        public double Radius { get; set; }

        public Circle(double radius)
        {
            Radius = radius;
        }

        public override double CalculateArea()
        {
            return Math.PI * Radius * Radius;
        }

        public override double CalculatePerimeter()
        {
            return 2 * Math.PI * Radius;
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Circle: Radius = {Radius}, Area = {CalculateArea()}, Perimeter = {CalculatePerimeter()}");
        }
    }

    class Rectangle : Shape
    {
        public double Length { get; set; }
        public double Width { get; set; }

        public Rectangle(double length, double width)
        {
            Length = length;
            Width = width;
        }

        public override double CalculateArea()
        {
            return Length * Width;
        }

        public override double CalculatePerimeter()
        {
            return 2 * (Length + Width);
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Rectangle: Length = {Length}, Width = {Width}, Area = {CalculateArea()}, Perimeter = {CalculatePerimeter()}");
        }
    }

    class Triangle : Shape
    {
        public double SideA { get; set; }
        public double SideB { get; set; }
        public double SideC { get; set; }

        public Triangle(double sideA, double sideB, double sideC)
        {
            SideA = sideA;
            SideB = sideB;
            SideC = sideC;
        }

        public override double CalculateArea()
        {
            double s = (SideA + SideB + SideC) / 2;
            return Math.Sqrt(s * (s - SideA) * (s - SideB) * (s - SideC));
        }

        public override double CalculatePerimeter()
        {
            return SideA + SideB + SideC;
        }

        public override void DisplayInfo()
        {
            Console.WriteLine($"Triangle: SideA = {SideA}, SideB = {SideB}, SideC = {SideC}, Area = {CalculateArea()}, Perimeter = {CalculatePerimeter()}");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Circle circle = new Circle(5);
            Rectangle rectangle = new Rectangle(4, 6);
            Triangle triangle = new Triangle(3, 4, 5);

            circle.DisplayInfo();
            rectangle.DisplayInfo();
            triangle.DisplayInfo();
        }
    }
}
